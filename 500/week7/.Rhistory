1+1
setwd("~/Workspace/mcdaniel/500/week7")
data <- read.csv("cafeteria.csv")
model <- lm(sales ~ price + adv_cost, data = data)
# Summary of the model
summary(model)
par(mfrow=c(1,2))
plot(data$price, data$sales, main="Sales vs Price", xlab="Price", ylab="Sales")
plot(data$adv_cost, data$sales, main="Sales vs Adv_cost", xlab="Adv_cost", ylab="Sales")
# Checking Normality
# Q-Q plot for residuals
qqPlot(model, main="Q-Q Plot of Residuals")
qqPlot(model, main="Q-Q Plot of Residuals")
library(tidyverse)
library(stats)
library(ggplot2)
library(car)
qqPlot(model, main="Q-Q Plot of Residuals")
install.packages("car")
library(car)
qqPlot(model, main="Q-Q Plot of Residuals")
plot(model$fitted.values, resid(model), main="Residuals vs Fitted", xlab="Fitted values", ylab="Residuals")
abline(h=0, col="red", lty=2)
summary(model)
given_price <- 5.50
given_adv_cost <- 1.2  # since values are in 1,000's of dollars
# Predicted sales (in thousands) using the regression model
predicted_sales <- predict(model, newdata = data.frame(price = given_price, adv_cost = given_adv_cost))
# Calculate the estimated annual revenue (in thousands)
estimated_revenue <- predicted_sales * given_price
estimated_revenue
data.frame(price = given_price, adv_cost = given_adv_cost)
new_data <- data.frame(price = given_price, adv_cost = given_adv_cost)
# Predict sales using the existing model and the new data
predicted_sales <- predict(model, newdata = new_data)
# Print the predicted sales
cat("Predicted Sales (in thousands):", predicted_sales)
predicted_sales <- predicted_sales * 1000
# Print the predicted sales
cat("Predicted Sales (in thousands):", predicted_sales)
# Extracting the coefficient and standard error for 'price'
coef_price <- coef(model)["price"]
std_err_price <- summary(model)$coefficients["price", "Std. Error"]
# Degrees of freedom for the t-distribution
df_t <- df.residual(model)
# Critical t-value for 95% CI
t_critical <- qt(0.975, df_t)  # Using 0.975 for upper tail in a two-tailed test
# Calculate the lower and upper bounds of the 95% CI for 'price'
lower_bound <- coef_price - t_critical * std_err_price
upper_bound <- coef_price + t_critical * std_err_price
cat("Lower Bound:", lower_bound, "\n")
cat("Upper Bound:", upper_bound, "\n")
lower_bound <- -10.0927
upper_bound <- -5.72303
# Calculate the increase in sales (in units of 1,000s of dollars) for a $0.10 decrease in price
increase_sales_lower_bound <- 0.10 * lower_bound
increase_sales_upper_bound <- 0.10 * upper_bound
cat("For a $0.10 decrease in price, sales would increase by between:", increase_sales_lower_bound, "and", increase_sales_upper_bound, "(in 1,000's of dollars)\n"
cat("For a $0.10 decrease in price, sales would increase by between:", increase_sales_lower_bound, "and", increase_sales_upper_bound, "(in 1,000's of dollars)\n")
cat("For a $0.10 decrease in price, sales would increase by between:", increase_sales_lower_bound, "and", increase_sales_upper_bound, "(in 1,000's of dollars)\n")
setwd("~/Workspace/mcdaniel/500/week7")
library(tidyverse)
library(stats)
library(ggplot2)
# install.packages("car")
library(car)
setwd("~/Workspace/mcdaniel/500/week7")
data <- read.csv("example5.3.csv")
data
data <- read.csv("example5.3.csv")
data <- data %>%
mutate(x1_sq = x1^2)
mutate(x2_sq = x2^2)
data <- data %>%
mutate(
x1_sq = x1^2,
x2_sq = x2^2,
x1x2 = x1*x2
)
model <- lm(y ~ x1 + x2 + x1_sq + x2_sq + x1x2, data=data)
summary(model)
so_model <- lm(y ~ x1 + x2 + x1_sq + x2_sq + x1x2, data=data)
summary(so_model)
simple_ols <- lm(y ~ x1 + x2, data=data)
summary(simple_ols)
ols2 <- lm(y ~ x1 + x2 + x1x2, data=data)
ols3 <- lm(y ~ x1 + x2 + x1sq, data=data)
data <- read.csv("example5.3.csv")
data <- data %>%
mutate(
x1sq = x1^2,
x2sq = x2^2,
x1x2 = x1*x2
)
so_model <- lm(y ~ x1 + x2 + x1sq + x2sq + x1x2, data=data)
summary(so_model)
# 7.	BBQ1: NONE of the variables in the second-order model are statistically significant.
# False
# 8.	BBQ2:  The R-squared value for the second-order OLS model is _________.
# 0.9931
# 9.	BBQ3:  The R-squared value for the simple linear OLS model is ________.
simple_ols <- lm(y ~ x1 + x2, data=data)
summary(simple_ols)
# 0.2115
# 10.	BBQ4:  Other than the intercept, which term or terms is/are statistically significant in the simple linear OLS model?
# x1
ols2 <- lm(y ~ x1 + x2 + x1x2, data=data)
ols3 <- lm(y ~ x1 + x2 + x1sq, data=data)
ols4 <- lm(y ~ x1 + x2 + x2sq, data=data)
ols5 <- lm(y ~ x1 + x2 + x1x2 + x1sq, data=data)
ols6 <- lm(y ~ x1 + x2 + x1x2 + x2sq, data=data)
summary(ols2)
summary(ols3)
summary(ols4)
ols7 <- lm(y ~ x1 + x2 + x1sq + x2sq, data=data)
summary(ols7)
summary(ols6)
summary(ols6)
summary(ols6)
new_data <- data.frame(
x1 = 85,
x2 = 57,
x1sq = 85^2,
x2sq = 57^2,
x1x2 = 85 * 57
)
# Predicting the quality using the model
predicted_quality <- predict(so_model, newdata = new_data)
# Printing the predicted quality
print(predicted_quality)
85^2,
85^2
View(data)
new_data2 <- data.frame(
x1 = 85,
x2 = 60,
x1sq = 85^2,
x2sq = x2^2,
x1x2 = 85 * x2
)
new_data2 <- data.frame(
x1 = 85,
x2 = 60,
x1sq = 85^2,
x2sq = 60^2,
x1x2 = 85 * 60
)
# Predicting the quality using the model
predicted_quality2 <- predict(so_model, newdata = new_data2)
# Printing the predicted quality
print(predicted_quality2)
summary(so_model)
summary(ols4)
summary(ols7)
summary(ols3)
summary(ols4)
summary(ols7)
summary(ols7)
summary(ols6)
monthly <- 650/12
monthly * 1.3
monthly <- 650/12
monthly_base <- monthly * 1.3
monthly_fee <- monthly_base * 1.2
monthly <- 650/12
monthly_base <- monthly * 1.3
monthly_fee <- monthly_base * 1.2
print(monthly_fee)
monthly <- 700/12
monthly_base <- monthly * 1.3
monthly_fee <- monthly_base * 1.2
print(monthly_fee)
print(monthly_fee*0.75)
